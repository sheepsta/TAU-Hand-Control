<launch>

  <!-- <arg name="recordData" default="false" /> -->
	<arg name="convert_tf" default="false" />
	<arg name="track" default="false" />
	<arg name="sensors" default="false" />
	<arg name="hand" default="true" />
	<arg name="pub_delay" default="10.0" />
    <arg name="num_fingers" default="2" />

  <group if="$(arg hand)">
      <group if="$(eval arg('num_fingers') == 2)">
          <include file="$(find openhand_node)/launch/openhand.launch" />
          <node pkg="hand_control" name="hand_control" type="gripper.py" output="screen">
             <rosparam command="load" file="$(find hand_control)/param/control_params.yaml" />
          </node>
          <!-- <node pkg="openhand_node" name="ResetMotorNode" type="ResetMotorNode.py" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
		        <rosparam command="load" file="$(find openhand_node)/param/reset_parameters.yaml"/>
	        </node> -->
      </group>
      <group if="$(eval arg('num_fingers') == 3)">
          <include file="$(find openhand_node)/launch/openhand.launch" />
          <node pkg="hand_control" name="hand_control" type="gripper_3f_velocity.py" output="screen">
             <rosparam command="load" file="$(find hand_control)/param/control_params_3f.yaml" />
          </node>
      </group>

      <node name="gripper_state_publisher" pkg="gripper_state_publisher" type="gripper_state_publisher_node" output="screen" launch-prefix="bash -c 'sleep $(arg pub_delay); $0 $@' "/>
  </group>

  <group if="$(arg sensors)">
    <node pkg="rosserial_python" type="serial_node.py" name="flex_force">
      <param name="port" value="/dev/ttyUSB2"/>
      <param name="baud" value="9600"/>
    </node>
  </group>







  <group if="$(arg track)">
  <node name="marker_tracker" pkg="natnet_ros" type="client" output="screen">
       <rosparam command="load" file="$(find natnet_ros)/param/track_parameters.yaml"/>
  </node>
  </group>

  <group if="$(arg convert_tf)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find kortex_description)/grippers/${gripper}/urdf/${gripper}_macro.xacro"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
              <rosparam param="source_list">[base_feedback/joint_state]</rosparam>
              <param name="use_gui" value="false"/>
              <param name="rate" value="$(arg cyclic_data_publish_rate)" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>
    
</launch>

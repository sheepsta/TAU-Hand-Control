// Generated by gencpp from file rollout/observation.msg
// DO NOT EDIT!


#ifndef ROLLOUT_MESSAGE_OBSERVATION_H
#define ROLLOUT_MESSAGE_OBSERVATION_H

#include <ros/service_traits.h>


#include <rollout/observationRequest.h>
#include <rollout/observationResponse.h>


namespace rollout
{

struct observation
{

typedef observationRequest Request;
typedef observationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct observation
} // namespace rollout


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rollout::observation > {
  static const char* value()
  {
    return "3faa55f8813856aab6c4371b84f9b124";
  }

  static const char* value(const ::rollout::observation&) { return value(); }
};

template<>
struct DataType< ::rollout::observation > {
  static const char* value()
  {
    return "rollout/observation";
  }

  static const char* value(const ::rollout::observation&) { return value(); }
};


// service_traits::MD5Sum< ::rollout::observationRequest> should match
// service_traits::MD5Sum< ::rollout::observation >
template<>
struct MD5Sum< ::rollout::observationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rollout::observation >::value();
  }
  static const char* value(const ::rollout::observationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rollout::observationRequest> should match
// service_traits::DataType< ::rollout::observation >
template<>
struct DataType< ::rollout::observationRequest>
{
  static const char* value()
  {
    return DataType< ::rollout::observation >::value();
  }
  static const char* value(const ::rollout::observationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rollout::observationResponse> should match
// service_traits::MD5Sum< ::rollout::observation >
template<>
struct MD5Sum< ::rollout::observationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rollout::observation >::value();
  }
  static const char* value(const ::rollout::observationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rollout::observationResponse> should match
// service_traits::DataType< ::rollout::observation >
template<>
struct DataType< ::rollout::observationResponse>
{
  static const char* value()
  {
    return DataType< ::rollout::observation >::value();
  }
  static const char* value(const ::rollout::observationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROLLOUT_MESSAGE_OBSERVATION_H

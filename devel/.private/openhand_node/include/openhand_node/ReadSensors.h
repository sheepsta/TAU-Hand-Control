// Generated by gencpp from file openhand_node/ReadSensors.msg
// DO NOT EDIT!


#ifndef OPENHAND_NODE_MESSAGE_READSENSORS_H
#define OPENHAND_NODE_MESSAGE_READSENSORS_H

#include <ros/service_traits.h>


#include <openhand_node/ReadSensorsRequest.h>
#include <openhand_node/ReadSensorsResponse.h>


namespace openhand_node
{

struct ReadSensors
{

typedef ReadSensorsRequest Request;
typedef ReadSensorsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadSensors
} // namespace openhand_node


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::openhand_node::ReadSensors > {
  static const char* value()
  {
    return "84e09e818ebe556ee5cef963e282890f";
  }

  static const char* value(const ::openhand_node::ReadSensors&) { return value(); }
};

template<>
struct DataType< ::openhand_node::ReadSensors > {
  static const char* value()
  {
    return "openhand_node/ReadSensors";
  }

  static const char* value(const ::openhand_node::ReadSensors&) { return value(); }
};


// service_traits::MD5Sum< ::openhand_node::ReadSensorsRequest> should match
// service_traits::MD5Sum< ::openhand_node::ReadSensors >
template<>
struct MD5Sum< ::openhand_node::ReadSensorsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::openhand_node::ReadSensors >::value();
  }
  static const char* value(const ::openhand_node::ReadSensorsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::openhand_node::ReadSensorsRequest> should match
// service_traits::DataType< ::openhand_node::ReadSensors >
template<>
struct DataType< ::openhand_node::ReadSensorsRequest>
{
  static const char* value()
  {
    return DataType< ::openhand_node::ReadSensors >::value();
  }
  static const char* value(const ::openhand_node::ReadSensorsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::openhand_node::ReadSensorsResponse> should match
// service_traits::MD5Sum< ::openhand_node::ReadSensors >
template<>
struct MD5Sum< ::openhand_node::ReadSensorsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::openhand_node::ReadSensors >::value();
  }
  static const char* value(const ::openhand_node::ReadSensorsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::openhand_node::ReadSensorsResponse> should match
// service_traits::DataType< ::openhand_node::ReadSensors >
template<>
struct DataType< ::openhand_node::ReadSensorsResponse>
{
  static const char* value()
  {
    return DataType< ::openhand_node::ReadSensors >::value();
  }
  static const char* value(const ::openhand_node::ReadSensorsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OPENHAND_NODE_MESSAGE_READSENSORS_H
